# 使用 ROS Noetic desktop 作为基础镜像
FROM osrf/ros:noetic-desktop-full

# 设置非交互式安装模式，避免交互式提示
ENV DEBIAN_FRONTEND=noninteractive

# 使用 Bash 作为默认 shell
SHELL ["/bin/bash", "-c"]

# 更新 apt 源并安装基础工具. 
RUN sudo sed -i "s@http://.*archive.ubuntu.com@https://mirrors.sustech.edu.cn@g" /etc/apt/sources.list \
  && sudo sed -i "s@http://.*security.ubuntu.com@https://mirrors.sustech.edu.cn@g" /etc/apt/sources.list \
  && apt-get update \
  && apt-get install -y \
  sudo \
  curl \
  git \
  wget \
  vim \
  usbutils \
  udev \
  ros-noetic-usb-cam \
  ros-noetic-cv-bridge \
  && rm -rf /var/lib/apt/lists/* \
  ## 安装miniconda
  && mkdir -p ~/miniconda3 \
  && wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh \
  && bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3 \
  && rm ~/miniconda3/miniconda.sh \
  && source ~/miniconda3/bin/activate \
  && conda init bash

# 安装 Interbotix 依赖 
RUN curl 'https://raw.githubusercontent.com/Interbotix/interbotix_ros_manipulators/main/interbotix_ros_xsarms/install/amd64/xsarm_amd64_install.sh' > xsarm_amd64_install.sh \
  && chmod +x xsarm_amd64_install.sh \
  && echo "keyboard-configuration keyboard-configuration/layout select us" | debconf-set-selections \
  && echo "keyboard-configuration keyboard-configuration/layoutcode select us" | debconf-set-selections \
  && ./xsarm_amd64_install.sh -d noetic -n \
  && rm xsarm_amd64_install.sh \
  && mkdir -p ~/interbotix_ws/src \
  && cd ~/interbotix_ws/src \
  # 克隆 ALOHA 项目并配置 ROS 环境
  && git clone https://github.com/OceanPresentChao/aloha-ZNJ.git \
  && sh -c 'echo "deb https://mirrors.sustech.edu.cn/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' \
  && curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - \
  && source /opt/ros/noetic/setup.sh \
  && source ~/interbotix_ws/devel/setup.sh \
  && cd ~/interbotix_ws && catkin_make \
  && sed -i '/def publish_positions/,/def /{s/self\.T_sb = mr\.FKinSpace(self\.robot_des\.M, self\.robot_des\.Slist, self\.joint_commands)/self.T_sb = None/}' ~/interbotix_ws/src/interbotix_ros_toolboxes/interbotix_xs_toolbox/interbotix_xs_modules/src/interbotix_xs_modules/arm.py

# 设置 conda 环境路径
ENV PATH=~/miniconda3/bin:$PATH

# 创建 conda 环境并安装 Python 依赖
RUN conda create -y -n aloha python=3.8.10 \
  && conda init bash \
  && source activate base && conda activate aloha \
  && conda config --add channels https://mirrors.sustech.edu.cn/anaconda/pkgs/free/ \
  && conda config --add channels https://mirrors.sustech.edu.cn/anaconda/pkgs/main/ \
  && conda config --set show_channel_urls yes \
  && pip install --upgrade pip --index-url https://mirrors.sustech.edu.cn/pypi/web/simple \
  && pip config set global.index-url https://mirrors.sustech.edu.cn/pypi/web/simple \
  && pip install \
  torchvision \
  torch \
  pyquaternion \
  pyyaml \
  rospkg \
  pexpect \
  mujoco==2.3.7 \
  dm_control==1.0.14 \
  opencv-python \
  matplotlib \
  einops \
  packaging \
  h5py \
  ipython \
  modern-robotics

# 设置工作目录
WORKDIR /root

# 设置启动命令
CMD ["bash"]
